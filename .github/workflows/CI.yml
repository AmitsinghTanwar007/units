name: CI

permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.81.0
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Lint
    needs: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.81.0
        with:
          components: clippy
          targets: wasm32-unknown-unknown
      - name: Set up Protoc
        uses: arduino/setup-protoc@v2
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Run cargo check
        run: cargo check --all-targets --all-features

  test:
    name: Unit Tests
    needs: fmt
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.81.0
        with:
          targets: wasm32-unknown-unknown
      - name: Set up Protoc
        uses: arduino/setup-protoc@v2
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run tests
        run: cargo test --all-features

  modules:
    name: WebAssembly Modules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.81.0
        with:
          targets: wasm32-unknown-unknown
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('**/Cargo.lock') }}
      - name: Build example modules
        run: |
          find modules -mindepth 1 -maxdepth 1 -type d | while read -r dir; do
            if [ -f "$dir/Makefile" ]; then
              echo "Building $dir..."
              cd "$dir"
              make ci
              cd - > /dev/null
            fi
          done
