package component:units;


interface driver {
    variant driver-error {
        permission-denied(string),
        system-error(string), 
        invalid-input(string),
        unknown-error(string)
    }
    intend: func(input: string) -> result<string, driver-error>;
    done: func(input: string) -> result<_, driver-error>;
    transfer: func(fro: string, to: string, value: string) -> result<_, driver-error>; 
    view: func(input: string) -> result<string, driver-error>;
}

world module-world {
    variant user-error {
        permission-denied(string),
        system-error(string),
        invalid-input(string), 
        failure(string),
        unknown-error(string)
    }
    import driver;
    export main: func(input: string) -> result<string, user-error>;
}
